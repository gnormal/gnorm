// Code generated by gnorm, DO NOT EDIT!

package procs

import (
	"database/sql"
	"gnorm.org/gnorm/database/drivers/mssql/gnorm"
	"log"
)

// Row represents a row from 'TABLES'.
type Row struct {
	ProcName    string // PROC_NAME
	ProcType    string // PROC_TYPE
	ProcCatalog string // PROC_CATALOG
	ProcSchema  string // PROC_SCHEMA
	ProcComment string //
}

// Query retrieves rows from 'PROCs' as a slice of Row.
func Query(db gnorm.DB, schema string) ([]*Row, error) {
	const sqlstr = `

SELECT TABLE_NAME,
       TABLE_TYPE,
       TABLE_CATALOG,
       TABLE_SCHEMA
       
  FROM INFORMATION_SCHEMA.TABLES
  WHERE TABLE_SCHEMA = @schema
  ;
`
	log.Println("querying tables ", sqlstr)

	var vals []*Row
	q, err := db.Query(sqlstr, sql.Named("schema", schema))
	if err != nil {
		return nil, err
	}
	for q.Next() {
		r := Row{}

		err = q.Scan(
			&r.ProcName,
			&r.ProcType,
			&r.ProcCatalog,
			&r.ProcSchema,
		)

		if err != nil {
			return nil, err
		}

		vals = append(vals, &r)
	}
	return vals, nil

}

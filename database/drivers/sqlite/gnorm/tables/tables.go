// Code generated by gnorm, DO NOT EDIT!

package tables

import (
	"gnorm.org/gnorm/database/drivers/sqlite/gnorm"
	"log"
)

// Row represents a row from 'TABLES'.
type Row struct {
	TableName     string // name
	TableType     string // type
	TableRootPage string // rootpage
	TableSql      string // sql
	TableComment  string // TABLE_COMMENT
}

// Query retrieves rows from 'TABLES' as a slice of Row.
func Query(db gnorm.DB, schema string) ([]*Row, error) {
	const sqlstr = `
   SELECT  name,
           type, 
           rootpage,
           sql
      FROM sqlite_master
     WHERE type = 'table'
           ;
`
	log.Println("querying tables ", sqlstr)

	var vals []*Row
	q, err := db.Query(sqlstr, schema)
	if err != nil {
		return nil, err
	}
	for q.Next() {
		r := Row{}

		err = q.Scan(
			&r.TableName,
			&r.TableType,
			&r.TableRootPage,
			&r.TableSql,
		)

		if err != nil {
			return nil, err
		}

		vals = append(vals, &r)
	}
	return vals, nil

}
